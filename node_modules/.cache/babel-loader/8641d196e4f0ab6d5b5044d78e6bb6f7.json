{"ast":null,"code":"import _classCallCheck from \"/var/www/reactjs/lession03-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/reactjs/lession03-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/reactjs/lession03-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/reactjs/lession03-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/reactjs/lession03-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/reactjs/lession03-react/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl'; // import _ from 'lodash';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onGenerateData = function () {\n      var task = [{\n        id: _this.generateID(),\n        name: 'Hoc lap trinh',\n        status: true\n      }, {\n        id: _this.generateID(),\n        name: 'Di boi',\n        status: false\n      }, {\n        id: _this.generateID(),\n        name: 'Ngu',\n        status: true\n      }];\n      localStorage.setItem('tasks', JSON.stringify(task));\n    };\n\n    _this.onToggleForm = function () {\n      _this.setState({\n        isDisplayForm: !_this.state.isDisplayForm\n      });\n    };\n\n    _this.onCloseForm = function () {\n      _this.setState({\n        isDisplayForm: !_this.state.isDisplayForm\n      });\n    };\n\n    _this.onSubmit = function (data) {\n      var tasks = _this.state.tasks;\n      data.id = _this.generateID();\n      tasks.push(data);\n\n      _this.setState({\n        tasks: tasks\n      });\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onUpdateStatus = function (id) {\n      var tasks = _this.state.tasks;\n\n      var index = _this.findIndex(id);\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n\n        _this.setState({\n          tasks: tasks\n        });\n\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n      }\n    };\n\n    _this.onUpdate = function (id) {\n      console.log(id);\n    };\n\n    _this.onDelete = function (id) {\n      var tasks = _this.state.tasks;\n\n      var index = _this.findIndex(id);\n\n      if (window.confirm(\"Ban co chac xoa khong ?\")) {\n        if (index !== -1) {\n          tasks.splice(index, 1);\n\n          _this.setState({\n            tasks: tasks\n          });\n\n          localStorage.setItem('tasks', JSON.stringify(tasks));\n        }\n      }\n\n      _this.onCloseForm();\n    };\n\n    _this.findIndex = function (id) {\n      var tasks = _this.state.tasks;\n      var result = -1;\n      tasks.forEach(function (task, index) {\n        if (task.id === id) {\n          result = index;\n        }\n      });\n      return result;\n    };\n\n    _this.state = {\n      tasks: [],\n      isDisplayForm: false,\n      taskEditing: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (localStorage && localStorage.getItem(\"tasks\")) {\n        var tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n        this.setState({\n          tasks: tasks\n        });\n      }\n    }\n  }, {\n    key: \"s4\",\n    value: function s4() {\n      return Math.floor(1 * Math.random() * 0x10000).toString(16).substring(1);\n    }\n  }, {\n    key: \"generateID\",\n    value: function generateID() {\n      return this.s4();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          tasks = _this$state.tasks,\n          isDisplayForm = _this$state.isDisplayForm;\n      var elementTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n        onSubmit: this.onSubmit,\n        onCloseForm: this.onCloseForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }) : '';\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, elementTaskForm), React.createElement(\"div\", {\n        className: isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: function onClick() {\n          return _this2.onToggleForm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger ml-5\",\n        onClick: this.onGenerateData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), \"Generate Data\"), React.createElement(TaskControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(TaskList, {\n        tasks: tasks,\n        onUpdateStatus: this.onUpdateStatus,\n        onDelete: this.onDelete,\n        onUpdate: this.onUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/var/www/reactjs/lession03-react/src/App.js"],"names":["React","Component","TaskList","TaskForm","TaskControl","App","props","onGenerateData","task","id","generateID","name","status","localStorage","setItem","JSON","stringify","onToggleForm","setState","isDisplayForm","state","onCloseForm","onSubmit","data","tasks","push","onUpdateStatus","index","findIndex","onUpdate","console","log","onDelete","window","confirm","splice","result","forEach","taskEditing","getItem","parse","Math","floor","random","toString","substring","s4","elementTaskForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\n// import _ from 'lodash';\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks : [],\n            isDisplayForm : false,\n            taskEditing : null\n        }\n    } \n    componentWillMount() {\n        if(localStorage && localStorage.getItem(\"tasks\")) {\n            var tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n            this.setState({\n                tasks: tasks\n            })\n        }\n    }       \n    onGenerateData = () => {\n        var task = [\n            {\n                id : this.generateID(),\n                name : 'Hoc lap trinh',\n                status : true\n            },\n            {\n                id : this.generateID(),\n                name : 'Di boi',\n                status : false\n            },\n            {\n                id : this.generateID(),\n                name : 'Ngu',\n                status : true\n            }\n        ];\n\n        localStorage.setItem('tasks', JSON.stringify(task));\n        \n    }\n\n    s4() {\n        return Math.floor((1*Math.random()) * 0x10000).toString(16).substring(1);\n    }\n    \n\n    generateID() {\n        return this.s4();\n    }\n\n    onToggleForm = () => {\n        this.setState({\n            isDisplayForm : ! this.state.isDisplayForm\n        })\n    }\n\n    onCloseForm = () => {\n        this.setState({\n            isDisplayForm : ! this.state.isDisplayForm\n        })\n    }\n\n    onSubmit = (data) => {\n        var { tasks } = this.state;\n        data.id = this.generateID();\n        tasks.push(data);\n        this.setState({\n            tasks : tasks\n        });\n        localStorage.setItem('tasks',JSON.stringify(tasks));\n    }\n\n    onUpdateStatus = (id) => {\n        var { tasks } = this.state;\n        var index = this.findIndex(id);\n        if(index !== -1) {\n            tasks[index].status = ! tasks[index].status;\n            this.setState({\n                tasks : tasks\n            });\n            localStorage.setItem('tasks', JSON.stringify(tasks));\n        }\n    }\n\n    onUpdate = (id) => {\n        console.log(id);\n    }\n\n    onDelete = (id) => {\n        var { tasks } = this.state;\n        var index = this.findIndex(id);\n        if (window.confirm(\"Ban co chac xoa khong ?\")) {\n            if(index !== -1) {\n                tasks.splice(index, 1);\n                this.setState({\n                    tasks : tasks\n                });\n                localStorage.setItem('tasks', JSON.stringify(tasks));\n            }\n        }\n        this.onCloseForm();\n    }\n\n    findIndex = (id) => {\n        var { tasks } = this.state;\n        var result = -1;\n        tasks.forEach((task, index) => {\n            if(task.id === id) {\n                result = index;\n            }\n        });\n        return result;\n    }\n\n    render() {\n        var { tasks, isDisplayForm } = this.state;\n        var elementTaskForm = isDisplayForm ? <TaskForm onSubmit = { this.onSubmit }  onCloseForm = { this.onCloseForm } /> : '';\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1><hr/>\n                </div>\n                <div className=\"row\">\n                    <div className= { isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '' } >\n                       { elementTaskForm }\n                    </div>\n                    <div className={ isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n                        <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick = { () => this.onToggleForm() }\n                      >\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            Thêm Công Việc\n                        </button>\n                        <button\n                        type=\"button\"\n                        className=\"btn btn-danger ml-5\"\n                        onClick= { this.onGenerateData }\n                      >\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            Generate Data\n                        </button>\n\n                        <TaskControl\n             \n                         />\n\n\n                        <TaskList\n                        tasks = { tasks }\n                        onUpdateStatus = { this.onUpdateStatus  }\n                        onDelete = { this.onDelete }\n                        onUpdate = { this.onUpdate }\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}